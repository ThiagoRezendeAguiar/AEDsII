• Faça o quadro de memória e mostre a saída na tela:

----------------------------------------------------------------------------------------------------------------

int *x1; 
int x2; 
int *x3;
x1 = (int *) malloc (sizeof(int));
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
*x1 = 20;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
x2 = *x1;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
*x3 = x2 * *x1;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
x3 = &x2;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
x2 = 15;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);

----------------------------------------------------------------------------------------------------------------


Memória:


Endereço de Memória   | Conteúdo
----------------------------------------------------
0                     | x1 -> 3 (Enderço)
1                     | x2 = 15
2                     | x3 -> 1 (Endereço de x2)
3                     | 20
...




Tela:

x1(0x4b32a0)(4928192)(0x7ffc56d87ff0) x2(0)(0x7ffc56d87fec) x3(0x4b32c0)(1)(0x7ffc56d87fe0)
x1(0x4b32a0)(20)(0x7ffc56d87ff0) x2(0)(0x7ffc56d87fec) x3(0x4b32c0)(0)(0x7ffc56d87fe0)
x1(0x4b32a0)(20)(0x7ffc56d87ff0) x2(20)(0x7ffc56d87fec) x3(0x4b32c0)(0)(0x7ffc56d87fe0)
x1(0x4b32a0)(20)(0x7ffc56d87ff0) x2(20)(0x7ffc56d87fec) x3(0x4b32c0)(400)(0x7ffc56d87fe0)
x1(0x4b32a0)(20)(0x7ffc56d87ff0) x2(20)(0x7ffc56d87fec) x3(0x7ffc56d87fec)(20)(0x7ffc56d87fe0)
x1(0x4b32a0)(20)(0x7ffc56d87ff0) x2(15)(0x7ffc56d87fec) x3(0x7ffc56d87fec)(15)(0x7ffc56d87fe0)